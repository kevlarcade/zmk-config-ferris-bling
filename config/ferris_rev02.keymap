/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define QWT_L 0 // QWERTY Lafayette
#define QAC_L 1 // QWERY Lafayette accents and diacritics
#define NUM_L 2 // Numbers
#define ALT_L 3 // Alt-Gr
#define ERG_L 4 // ERGO-L
#define EAC_L 5 // ERGO-L accents and diacritics

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";


//                Template keyboard
//                _______  _______  _______  _______  _______    _______  _______  _______  _______  _______
//                _______  _______  _______  _______  _______    _______  _______  _______  _______  _______
//                _______  _______  _______  _______  _______    _______  _______  _______  _______  _______
//                                           _______  _______    _______  _______

        default_layer {
            bindings = <
//                _______  _______  _______  _______  _______    _______  _______  _______  _______  _______
//                _______  _______  _______  _______  _______    _______  _______  _______  _______  _______
//                _______  _______  _______  _______  _______    _______  _______  _______  _______  _______
//                                           _______  _______    _______  _______
            >;
        };

        qwerty_accent_layer {
            bindings = <
//                _______  _______  _______  _______  _______    _______  _______  _______  _______  _______
//                _______  _______  _______  _______  _______    _______  _______  _______  _______  _______
//                _______  _______  _______  _______  _______    _______  _______  _______  _______  _______
//                                           _______  _______    _______  _______
            >;
        };

        num_layer {
            bindings = <
//                _______  _______  _______  _______  _______    _______  _______  _______  _______  _______
//                _______  _______  _______  _______  _______    _______  _______  _______  _______  _______
//                _______  _______  _______  _______  _______    _______  _______  _______  _______  _______
//                                           _______  _______    _______  _______
            >;
        };

        alt_layer {
            bindings = <
//                _______  _______  _______  _______  _______    _______  _______  _______  _______  _______
//                _______  _______  _______  _______  _______    _______  _______  _______  _______  _______
//                _______  _______  _______  _______  _______    _______  _______  _______  _______  _______
//                                           _______  _______    _______  _______
            >;
        };

        ergol_layer {
            bindings = <
//                _______  _______  _______  _______  _______    _______  _______  _______  _______  _______
//                _______  _______  _______  _______  _______    _______  _______  _______  _______  _______
//                _______  _______  _______  _______  _______    _______  _______  _______  _______  _______
//                                           _______  _______    _______  _______
            >;
        };

        ergol_accent_layer {
            bindings = <
//                _______  _______  _______  _______  _______    _______  _______  _______  _______  _______
//                _______  _______  _______  _______  _______    _______  _______  _______  _______  _______
//                _______  _______  _______  _______  _______    _______  _______  _______  _______  _______
//                                           _______  _______    _______  _______
            >;
        };
    };
};
